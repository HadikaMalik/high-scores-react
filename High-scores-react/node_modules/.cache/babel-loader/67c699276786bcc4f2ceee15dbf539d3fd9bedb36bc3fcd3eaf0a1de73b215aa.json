{"ast":null,"code":"var _jsxFileName = \"/home/hadika/Documents/CYF /React/high-scores-react/src/HighScoreTable.jsx\";\nimport React from \"react\";\nimport App from \"./App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HighScoreTable = ({\n  country,\n  sortOrder\n}) => {\n  const sortedScores = [...country.scores].sort((a, b) => {\n    if (sortOrder === 'asc') {\n      return a.s - b.s;\n    } else {\n      return b.s - a.s;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"sub-heading\",\n        children: [\"High scores: \", country.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: sortedScores.map((score, index) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: score.n.toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: score.s\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_c = HighScoreTable;\nexport default HighScoreTable;\nvar _c;\n$RefreshReg$(_c, \"HighScoreTable\");","map":{"version":3,"names":["React","App","jsxDEV","_jsxDEV","Fragment","_Fragment","HighScoreTable","country","sortOrder","sortedScores","scores","sort","a","b","s","children","className","name","fileName","_jsxFileName","lineNumber","columnNumber","map","score","index","n","toUpperCase","_c","$RefreshReg$"],"sources":["/home/hadika/Documents/CYF /React/high-scores-react/src/HighScoreTable.jsx"],"sourcesContent":["import React from \"react\";\nimport App from \"./App\";\n\nconst HighScoreTable = ({ country, sortOrder }) => {\n    const sortedScores = [...country.scores].sort((a, b) => {\n        if (sortOrder === 'asc') {\n            return a.s - b.s;\n        } else {\n            return b.s - a.s;\n        }\n    })\n    return (\n        <>\n            <div className=\"box\">\n                <h2 className=\"sub-heading\">High scores: {country.name}</h2>\n                <table>\n                    <tbody>\n                        {sortedScores.map((score, index) => {\n                            return (\n                                <tr key={index}>\n                                    <td>{score.n.toUpperCase()}</td>\n                                    <td>{score.s}</td>\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        </>\n    )\n}\n\nexport default HighScoreTable;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExB,MAAMC,cAAc,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAU,CAAC,KAAK;EAC/C,MAAMC,YAAY,GAAG,CAAC,GAAGF,OAAO,CAACG,MAAM,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IACpD,IAAIL,SAAS,KAAK,KAAK,EAAE;MACrB,OAAOI,CAAC,CAACE,CAAC,GAAGD,CAAC,CAACC,CAAC;IACpB,CAAC,MAAM;MACH,OAAOD,CAAC,CAACC,CAAC,GAAGF,CAAC,CAACE,CAAC;IACpB;EACJ,CAAC,CAAC;EACF,oBACIX,OAAA,CAAAE,SAAA;IAAAU,QAAA,eACIZ,OAAA;MAAKa,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAChBZ,OAAA;QAAIa,SAAS,EAAC,aAAa;QAAAD,QAAA,GAAC,eAAa,EAACR,OAAO,CAACU,IAAI;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC5DlB,OAAA;QAAAY,QAAA,eACIZ,OAAA;UAAAY,QAAA,EACKN,YAAY,CAACa,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;YAChC,oBACIrB,OAAA;cAAAY,QAAA,gBACIZ,OAAA;gBAAAY,QAAA,EAAKQ,KAAK,CAACE,CAAC,CAACC,WAAW,CAAC;cAAC;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAChClB,OAAA;gBAAAY,QAAA,EAAKQ,KAAK,CAACT;cAAC;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA,GAFbG,KAAK;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAGV,CAAC;UAEb,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC,gBACR,CAAC;AAEX,CAAC;AAAAM,EAAA,GA3BKrB,cAAc;AA6BpB,eAAeA,cAAc;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}